Build me a comprehensive cybersecurity dashboard application called "SecureNet" with the following specifications:

PROJECT OVERVIEW:
Create a sophisticated, enterprise-grade network security monitoring platform with a deluxe, professional frontend and robust backend architecture.

FRONTEND REQUIREMENTS (React-based):
- Modern, dark-themed cybersecurity dashboard with neon accent colors (cyan, green, red for alerts)
- Multi-panel layout with real-time monitoring widgets
- Responsive design optimized for large screens and security operations centers
- Professional typography using fonts like Inter or Roboto
- Animated charts and graphs for network traffic visualization
- Real-time threat alerts with severity indicators
- Interactive network topology visualization
- Tabbed interface for different security modules:
  * Network Monitoring Dashboard
  * Intrusion Detection System (IDS) 
  * Vulnerability Scanner Results
  * Firewall Configuration Panel
  * System Health Monitoring
  * Security Logs Viewer

SPECIFIC UI COMPONENTS:
- Header with SecureNet branding and user authentication status
- Sidebar navigation with security module icons
- Main dashboard with 6-8 monitoring widgets including:
  * Live network traffic graph
  * Threat level indicator (gauge chart)
  * Recent security events table
  * System status cards
  * Geographic threat map
  * Performance metrics charts
- Modal dialogs for detailed threat analysis
- Toast notifications for real-time alerts
- Loading states and skeleton screens
- Professional data tables with sorting/filtering

TECHNICAL STACK:
- React 18 with TypeScript
- Material-UI or Chakra UI for component library
- Chart.js or Recharts for data visualization
- React Router for navigation
- Axios for API calls
- React Query for state management
- Framer Motion for animations

BACKEND API STRUCTURE:
Create Flask REST API endpoints for:
- /api/auth (login/logout/token refresh)
- /api/dashboard/metrics (real-time system metrics)
- /api/threats (threat detection data)
- /api/network/traffic (network monitoring data)
- /api/vulnerabilities (scan results)
- /api/firewall/rules (firewall configuration)
- /api/logs (security event logs)

SECURITY FEATURES:
- JWT-based authentication
- Role-based access control
- Input validation and sanitization
- CORS configuration
- Rate limiting
- Secure headers

STYLING REQUIREMENTS:
- Professional cybersecurity aesthetic with dark theme
- Gradient backgrounds and glassmorphism effects
- Consistent color scheme: dark blues, cyans, and greens
- Hover effects and smooth transitions
- Professional icons (Lucide React or Heroicons)
- Responsive grid layouts
- Professional loading animations

DATA VISUALIZATION:
- Real-time updating charts
- Interactive network diagrams
- Threat severity heatmaps
- Performance monitoring graphs
- Geographic threat visualization

Make this look like a professional enterprise security platform that would be used in a Security Operations Center (SOC). Focus on creating a sophisticated, modern interface that conveys security expertise and reliability.
